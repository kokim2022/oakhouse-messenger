version: "3.7"
services:
  app:
    build:
      args:
        user: sammy
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: messenger
    container_name: messenger-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - messenger

  db:
    image: mysql:5.7
    container_name: messenger-db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_NAME: mysql
    ports:
    - '3406:3306'
    networks:
      - messenger

  nginx:
    image: nginx:alpine
    container_name: messenger-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - messenger

  nodejs:
    image: node:16.15.1 # Use Node.js version 16.15.1
    container_name: messenger-nodejs
    restart: always
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - messenger
    command: ["npm", "run", "production"] 

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8080:80"
    depends_on:
      - db
    environment:
      PMA_HOST: db
    restart: always
    networks:
      - messenger

networks:
  messenger:
    driver: bridge
